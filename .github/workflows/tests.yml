name: Run tests

on: ['push', 'pull_request']
jobs:    
  build:
  
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
       python-version: [3.9]

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        # volumes:
        #  - ./bin/db:/docker-entrypoint-initdb.d
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      redis_channel:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6380:6379
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Instal Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
    - name: Run Tests
      run: |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py test apps.chats.tests
      env:
        DATABASE_NAME: postgres
        DATABASE_USER: postgres
        DATABASE_PASS: postgres
        DATABASE_HOST: localhost # since running outside container
        DATABASE_PORT: 5432
        REDIS_URL: redis://localhost:6379/?db=0
        REDIS_CHANNEL_URL: redis://localhost:6380/?db=0
        CSRF_TRUSTED_ORIGINS: https://github.com/

